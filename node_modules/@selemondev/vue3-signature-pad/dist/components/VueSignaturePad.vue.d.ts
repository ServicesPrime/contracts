import type { Props, WaterMarkObj } from '../types';
declare function isCanvasEmpty(): boolean;
declare function saveSignature(format?: string): string;
declare function clearCanvas(): void;
declare function fromDataURL(url: string): void;
declare function undo(): void;
declare function addWaterMark(data: WaterMarkObj): void;
declare const _default: import("vue").DefineComponent<Props, {
    saveSignature: typeof saveSignature;
    clearCanvas: typeof clearCanvas;
    addWaterMark: typeof addWaterMark;
    isCanvasEmpty: typeof isCanvasEmpty;
    fromDataURL: typeof fromDataURL;
    undo: typeof undo;
}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {} & {
    beginStroke: (val: string) => any;
    endStroke: (val: string) => any;
    beforeUpdateStroke: (val: string) => any;
    afterUpdateStroke: (val: string) => any;
}, string, import("vue").PublicProps, Readonly<Props> & Readonly<{
    onBeginStroke?: ((val: string) => any) | undefined;
    onEndStroke?: ((val: string) => any) | undefined;
    onBeforeUpdateStroke?: ((val: string) => any) | undefined;
    onAfterUpdateStroke?: ((val: string) => any) | undefined;
}>, {
    width: string;
    height: string;
    minWidth: number;
    maxWidth: number;
    throttle: number;
    disabled: boolean;
    clearOnResize: boolean;
    defaultUrl: string;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, false, {}, any>;
export default _default;
